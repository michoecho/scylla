// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: node.capnp

#include "node.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<47> b_94efcb88385cd556 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     86, 213,  92,  56, 136, 203, 239, 148,
     11,   0,   0,   0,   1,   0,   1,   0,
    245, 103, 240,  10, 108,  98, 174, 143,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 100, 101,  46,  99,  97, 112,
    110, 112,  58,  80,  97, 121, 108, 111,
     97, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     98, 105, 116, 115,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 121, 116, 101, 115,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_94efcb88385cd556 = b_94efcb88385cd556.words;
#if !CAPNP_LITE
static const uint16_t m_94efcb88385cd556[] = {0, 1};
static const uint16_t i_94efcb88385cd556[] = {0, 1};
const ::capnp::_::RawSchema s_94efcb88385cd556 = {
  0x94efcb88385cd556, b_94efcb88385cd556.words, 47, nullptr, m_94efcb88385cd556,
  0, 2, i_94efcb88385cd556, nullptr, nullptr, { &s_94efcb88385cd556, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_889a1e8f2accb19d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    157, 177, 204,  42, 143,  30, 154, 136,
     11,   0,   0,   0,   1,   0,   2,   0,
    245, 103, 240,  10, 108,  98, 174, 143,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 100, 101,  46,  99,  97, 112,
    110, 112,  58,  67, 104, 105, 108, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    111, 102, 102, 115, 101, 116,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114,  97, 110, 115, 105, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_889a1e8f2accb19d = b_889a1e8f2accb19d.words;
#if !CAPNP_LITE
static const uint16_t m_889a1e8f2accb19d[] = {0, 1};
static const uint16_t i_889a1e8f2accb19d[] = {0, 1};
const ::capnp::_::RawSchema s_889a1e8f2accb19d = {
  0x889a1e8f2accb19d, b_889a1e8f2accb19d.words, 48, nullptr, m_889a1e8f2accb19d,
  0, 2, i_889a1e8f2accb19d, nullptr, nullptr, { &s_889a1e8f2accb19d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_c9717af5ce98ee86 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    134, 238, 152, 206, 245, 122, 113, 201,
     11,   0,   0,   0,   1,   0,   0,   0,
    245, 103, 240,  10, 108,  98, 174, 143,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 100, 101,  46,  99,  97, 112,
    110, 112,  58,  78, 111, 100, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 121, 108, 111,  97, 100,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     86, 213,  92,  56, 136, 203, 239, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 105, 108, 100, 114, 101, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    157, 177, 204,  42, 143,  30, 154, 136,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c9717af5ce98ee86 = b_c9717af5ce98ee86.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c9717af5ce98ee86[] = {
  &s_889a1e8f2accb19d,
  &s_94efcb88385cd556,
};
static const uint16_t m_c9717af5ce98ee86[] = {1, 0};
static const uint16_t i_c9717af5ce98ee86[] = {0, 1};
const ::capnp::_::RawSchema s_c9717af5ce98ee86 = {
  0xc9717af5ce98ee86, b_c9717af5ce98ee86.words, 51, d_c9717af5ce98ee86, m_c9717af5ce98ee86,
  2, 2, i_c9717af5ce98ee86, nullptr, nullptr, { &s_c9717af5ce98ee86, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Payload
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Payload::_capnpPrivate::dataWordSize;
constexpr uint16_t Payload::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Payload::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Payload::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Child
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Child::_capnpPrivate::dataWordSize;
constexpr uint16_t Child::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Child::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Child::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Node
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Node::_capnpPrivate::dataWordSize;
constexpr uint16_t Node::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Node::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Node::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



